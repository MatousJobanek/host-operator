---
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: null
    labels:
      controller-tools.k8s.io: "1.0"
    name: kubefedclusters.core.kubefed.k8s.io
  spec:
    additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: ready
      type: string
    - JSONPath: .metadata.creationTimestamp
      name: age
      type: date
    group: core.kubefed.k8s.io
    names:
      kind: KubeFedCluster
      plural: kubefedclusters
    scope: Namespaced
    subresources:
      status: {}
    validation:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              apiEndpoint:
                description: The API endpoint of the member cluster. This can be a hostname,
                  hostname:port, IP or IP:port.
                type: string
              caBundle:
                description: CABundle contains the certificate authority information.
                format: byte
                type: string
              secretRef:
                description: Name of the secret containing the token required to access
                  the member cluster. The secret needs to exist in the same namespace
                  as the control plane and should have a "token" key.
                properties:
                  name:
                    description: Name of a secret within the enclosing namespace
                    type: string
                required:
                - name
                type: object
            required:
            - apiEndpoint
            - secretRef
            type: object
          status:
            properties:
              conditions:
                description: Conditions is an array of current cluster conditions.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time the condition was checked.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transit from one status to
                        another.
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about last
                        transition.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of cluster condition, Ready or Offline.
                      type: string
                  required:
                  - type
                  - status
                  - lastProbeTime
                  type: object
                type: array
              region:
                description: Region is the name of the region in which all of the nodes
                  in the cluster exist.  e.g. 'us-east1'.
                type: string
              zones:
                description: Zones are the names of availability zones in which the
                  nodes of the cluster exist, e.g. 'us-east1-a'.
                items:
                  type: string
                type: array
            required:
            - conditions
            type: object
    version: v1beta1
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
---
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: null
    labels:
      controller-tools.k8s.io: "1.0"
    name: masteruserrecords.toolchain.dev.openshift.com
  spec:
    group: toolchain.dev.openshift.com
    names:
      kind: MasterUserRecord
      plural: masteruserrecords
      shortNames:
      - mur
    scope: Namespaced
    subresources:
      status: {}
    validation:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              deprovisioned:
                description: If set to true then the corresponding UserAccount should
                  be deleted "false" is assumed by default
                type: boolean
              disabled:
                description: If set to true then the corresponding user should not be
                  able to login (but the underlying UserAccounts still exists) "false"
                  is assumed by default
                type: boolean
              userAccounts:
                description: The list of user accounts in the member clusters which
                  belong to this MasterUserRecord
                items:
                  properties:
                    spec:
                      description: The spec of the corresponding UserAccount
                      properties:
                        disabled:
                          description: If set to true then the corresponding user should
                            not be able to login "false" is assumed by default
                          type: boolean
                        nsLimit:
                          description: The namespace limit name
                          type: string
                        nsTemplateSet:
                          description: Namespace template set
                          properties:
                            namespaces:
                              description: The namespace templates
                              items:
                                properties:
                                  revision:
                                    description: The revision of the corresponding template
                                    type: string
                                  template:
                                    description: Optional field. Used to specify a custom
                                      template
                                    type: string
                                  type:
                                    description: 'The type of the namespace. For example:
                                      ide|cicd|stage|default'
                                    type: string
                                required:
                                - type
                                - revision
                                type: object
                              type: array
                            tierName:
                              description: The name of the tier represented by this
                                template set
                              type: string
                          required:
                          - tierName
                          - namespaces
                          type: object
                        userID:
                          description: UserID is the user ID from RHD Identity Provider
                            token (“sub” claim) Is to be used to create Identity and
                            UserIdentityMapping resources
                          type: string
                      required:
                      - userID
                      - nsLimit
                      - nsTemplateSet
                      type: object
                    syncIndex:
                      description: SyncIndex is to be updated by UserAccount Controller
                        when the member needs to trigger MasterUserRecord <-> UserAccount
                        synchronization
                      type: string
                    targetCluster:
                      description: The cluster in which the user exists
                      type: string
                  required:
                  - targetCluster
                  - syncIndex
                  - spec
                  type: object
                type: array
              userID:
                description: UserID is the user ID from RHD Identity Provider token
                  (“sub” claim)
                type: string
            required:
            - userID
            type: object
          status:
            properties:
              conditions:
                description: 'Conditions is an array of current Master User Record conditions
                  Supported condition types: Provisioning, UserAccountNotReady and Ready
                  +patchMergeKey=type +patchStrategy=merge'
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transit from one status to
                        another.
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about last
                        transition.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
              userAccounts:
                description: The status of user accounts in the member clusters which
                  belong to this MasterUserRecord
                items:
                  properties:
                    conditions:
                      description: 'Conditions is an array of current User Account conditions
                        Supported condition types: ConditionReady +patchMergeKey=type
                        +patchStrategy=merge'
                      items:
                        properties:
                          lastTransitionTime:
                            description: Last time the condition transit from one status
                              to another.
                            format: date-time
                            type: string
                          message:
                            description: Human readable message indicating details about
                              last transition.
                            type: string
                          reason:
                            description: (brief) reason for the condition's last transition.
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            type: string
                          type:
                            description: Type of condition
                            type: string
                        required:
                        - type
                        - status
                        type: object
                      type: array
                    syncIndex:
                      description: SyncIndex is used for checking if there is needed
                        some MasterUserRecord <-> UserAccount synchronization for this
                        specific UserAccount in the specific member cluster
                      type: string
                    targetCluster:
                      description: The cluster in which the user exists
                      type: string
                  required:
                  - targetCluster
                  - syncIndex
                  type: object
                type: array
            type: object
    version: v1alpha1
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
---
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: null
    labels:
      controller-tools.k8s.io: "1.0"
    name: nstemplatetiers.toolchain.dev.openshift.com
  spec:
    group: toolchain.dev.openshift.com
    names:
      kind: NSTemplateTier
      plural: nstemplatetiers
    scope: Namespaced
    subresources:
      status: {}
    validation:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              namespaces:
                description: The namespace templates
                items:
                  properties:
                    revision:
                      description: The revision of the corresponding template
                      type: string
                    template:
                      description: Optional field. Used to specify a custom template
                      type: string
                    type:
                      description: 'The type of the namespace. For example: ide|cicd|stage|default'
                      type: string
                  required:
                  - type
                  - revision
                  type: object
                type: array
            required:
            - namespaces
            type: object
          status:
            type: object
    version: v1alpha1
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
---
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: null
    labels:
      controller-tools.k8s.io: "1.0"
    name: usersignups.toolchain.dev.openshift.com
  spec:
    additionalPrinterColumns:
    - JSONPath: .spec.userID
      name: User ID
      priority: 1
      type: string
    - JSONPath: .spec.username
      name: Username
      priority: 1
      type: string
    - JSONPath: .spec.targetCluster
      name: TargetCluster
      priority: 1
      type: string
    - JSONPath: .status.conditions[?(@.type=="Complete")].status
      name: Complete
      type: string
    - JSONPath: .status.conditions[?(@.type=="Complete")].reason
      name: Reason
      type: string
    - JSONPath: .status.conditions[?(@.type=="Approved")].status
      name: Approved
      priority: 1
      type: string
    - JSONPath: .status.conditions[?(@.type=="Approved")].reason
      name: ApprovedBy
      priority: 1
      type: string
    group: toolchain.dev.openshift.com
    names:
      kind: UserSignup
      plural: usersignups
    scope: Namespaced
    subresources:
      status: {}
    validation:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              approved:
                description: If Approved set to 'true' then the user has been manually
                  approved If not set then the user is subject of auto-approval (if
                  enabled)
                type: boolean
              targetCluster:
                description: The cluster in which the user is provisioned in If not
                  set then the target cluster will be picked automatically
                type: string
              userID:
                description: UserID is the user ID from RHD Identity Provider token
                  (“sub” claim)
                type: string
              username:
                description: The username.  This may differ from the UserSignup's metadata.name,
                  which is restricted by the limited character set available for naming
                  (see RFC1123).  If the username contains characters which are disqualified
                  from the resource name, the username is transformed into an acceptable
                  resource name instead. For example, johnsmith@redhat.com -> johnsmith-at-redhat-com
                type: string
            required:
            - userID
            - username
            type: object
          status:
            properties:
              conditions:
                description: 'Conditions is an array of current UserSignup conditions
                  Supported condition types: PendingApproval, Provisioning, Complete
                  +patchMergeKey=type +patchStrategy=merge'
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transit from one status to
                        another.
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about last
                        transition.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
            type: object
    version: v1alpha1
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
